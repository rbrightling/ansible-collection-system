---
# tasks file for openssh_server

- name: Include distro variables
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution | lower }}_{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
        - default.yml
      paths:
        - '{{ playbook_dir }}/vars'
        - '{{ role_path }}/vars'

- name: Install openssh server package
  ansible.builtin.package:
    name: "{{ openssh_server__packages }}"
    state: present
  become: true
  tags:
    - install

- name: Get openssh server version
  ansible.builtin.command: "{{ openssh_server__sshd_path }} -v"
  register: openssh_server_reg_version
  changed_when: false
  failed_when: false
  check_mode: false

- name: Parse openssh server version
  ansible.builtin.set_fact:
    openssh_server_major_version: >
      "{{ openssh_server_reg_version.stderr | regex_replace('^(.|\\r|\\n)*OpenSSH_(?P<major_version>\\d*).[0-9](.|\\r|\\n)*$', '\\g<major_version>') }}"
    openssh_server_minor_version: "{{ openssh_server_reg_version.stderr | regex_search('.*OpenSSH_[0-9]*.(0-9)', '\\1') }}"

- name: Include openssh server release variables
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "sshd_{{ openssh_server_major_version }}_{{ openssh_server_minor_version }}.yml"
        - "sshd_{{ openssh_server_major_version }}.yml"
        - sshd_default.yml
      paths:
        - '{{ role_path }}/vars'
        - '{{ playbook_dir }}/vars'

- name: Get host rsa host key
  ansible.builtin.command: "{{ openssh_server__ssh_keygen_bin }} -lf {{ openssh_server__rsa_host_key_path }}"
  register: openssh_server_reg_rsa_host_key_print
  changed_when: false
  failed_when: false
  check_mode: false
  when: openssh_server__rsa_host_key_path in openssh_server_host_key

- name: Remove RSA hostkey for bit mismatch
  ansible.builtin.file:
    path: "{{ openssh_server__rsa_host_key_path }}"
    state: absent
  when: openssh_server_reg_rsa_host_key_print is not skipped and
    openssh_server_reg_rsa_host_key_print.rc == 0 and
    openssh_server_reg_rsa_host_key_print.stdout.split(maxsplit=1)[0]|int != openssh_server_rsa_host_key_bit|int
  become: true

- name: Generate hostkeys
  ansible.builtin.command: "{{ openssh_server__ssh_keygen_bin }} {{ item.command }}"
  args:
    creates: "{{ item.path }}"
  with_items:
    - path: "{{ openssh_server__rsa_host_key_path }}"
      command: "-f {{ openssh_server__rsa_host_key_path }} -q -N '' -h -t rsa -b {{ openssh_server_rsa_host_key_bit }}"
    - path: "{{ openssh_server__ecdsa_host_key_path }}"
      command: "-f {{ openssh_server__ecdsa_host_key_path }} -q -N '' -h -t ecdsa"
    - path: "{{ openssh_server__ed25519_host_key_path }}"
      command: "-f {{ openssh_server__ed25519_host_key_path }} -q -N '' -h -t ed25519"
  loop_control:
    label: "{{ item.path }}"
  become: true
  when: item.path in openssh_server_host_key
  tags:
    - setup

- name: Configure revoked key list
  ansible.builtin.template:
    src: revoked_keys.j2
    dest: "{{ openssh_server_revoked_keys }}"
    owner: root
    group: root
    mode: "0600"
  become: true
  when: openssh_server_revoked_keys and openssh_server_revoked_key_list is iterable
  tags:
    - setup

- name: Configure openssh-server banner
  ansible.builtin.template:
    src: issue.net.j2
    dest: "{{ openssh_server_banner }}"
    owner: root
    group: root
    mode: "0644"
  become: true
  when: 'openssh_server_banner != "none" and openssh_server_issue is not none'
  tags:
    - configure

- name: Include distro specific tasks
  ansible.builtin.include_tasks: "{{ dist_tasks_file }}"
  loop: "{{ query('first_found', params, errors='ignore') }}"
  loop_control:
    loop_var: "dist_tasks_file"
  vars:
    params:
      files:
        - "{{ ansible_os_family | lower }}.yml"

- name: Configure openssh server
  ansible.builtin.template:
    src: sshd_config.j2
    dest: "{{ openssh_server__conf_path }}"
    owner: root
    group: root
    mode: "0600"
    validate: "{{ openssh_server__sshd_path }} -t -f %s"
  become: true
  notify:
    - "Restart openssh_server service"
  tags:
    - configure

- name: Start and enable openssh server
  ansible.builtin.service:
    name: "{{ openssh_server__service_name }}"
    state: started
    enabled: true
  become: true
  tags:
    - service
